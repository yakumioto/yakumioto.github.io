<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Hexo on Mioto's Blog</title><link>https://mioto.me/tags/hexo/</link><description>Recent content in Hexo on Mioto's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sun, 26 Nov 2017 22:16:29 +0000</lastBuildDate><atom:link href="https://mioto.me/tags/hexo/index.xml" rel="self" type="application/rss+xml"/><item><title>使用docker自动部署hexo</title><link>https://mioto.me/2017/11/automated-deployment-of-hexo-using-docker/</link><pubDate>Sun, 26 Nov 2017 22:16:29 +0000</pubDate><guid>https://mioto.me/2017/11/automated-deployment-of-hexo-using-docker/</guid><description>使用这种实现自动部署 hexo 必须有台自己的服务器, 如果没有的话我也没办法~~
原理 我实现的原理其实很简单. 当 source 被提交后, 触发 webhook 然后通过执行 bash script 自动进行编译部署
实现 给 hexo 准备个仓库, 例: github.com/xxxx/hexo-source, 如果你有私有仓库 如 gogs gitlib 等都可以
在 hexo 的根目录创建一个 deploy.sh 的脚本
#/bin/bash set -ev export TZ=&amp;#39;Asia/Shanghai&amp;#39; npm install hexo-cli -g npm install hexo g -d 制作 node-caddy 的 docker, 当然也可以使用我已经写好的. yakumioto/node-caddy, 并编写 Caddyfile, 因为我使用的是自己部署的 Gogs 所以引用了 key
:80 { gzip git { repo git@git.mioto.me:yakumioto/mioto.me.git branch master key /root/.ssh/id_rsa hook /webhook miotoyaku then bash .</description></item></channel></rss>